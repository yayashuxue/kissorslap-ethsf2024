npmdiff --git a/app/page.tsx b/app/page.tsx
index 6a90637..5d3d566 100644
--- a/app/page.tsx
+++ b/app/page.tsx
@@ -3,71 +3,181 @@ import { useState, useEffect } from "react";
 import Link from "next/link";
 import Head from "next/head";
 import Login from "../components/Login";
-import { NotificationProvider } from "../contexts/NotificationContext";
 
-export default function Header() {
-  const [isScrolled, setIsScrolled] = useState(false);
+const GameDemoPage = () => {
+  const [result, setResult] = useState({
+    message: "CLICK BUTTON!",
+    description: "See how you play as a kisser or slapper in game",
+    you: null,
+    other: null,
+  });
+  const [selectedButton, setSelectedButton] = useState<string | null>(null);
 
-  // Effect to handle scroll and set header background
-  useEffect(() => {
-    const handleScroll = () => {
-      if (window.scrollY > 50) {
-        setIsScrolled(true);
-      } else {
-        setIsScrolled(false);
-      }
-    };
-
-    window.addEventListener("scroll", handleScroll);
-
-    return () => {
-      window.removeEventListener("scroll", handleScroll);
-    };
-  }, []);
+  const handleAction = (action) => {
+    setSelectedButton(action);
+    switch (action) {
+      case "slap_kiss":
+        setResult({
+          message: "ðŸ˜ˆðŸ˜ˆðŸ˜ˆ",
+          description: "You Slapped, They Kissed",
+          you: 15,
+          other: 0,
+        });
+        break;
+      case "both_kiss":
+        setResult({
+          message: "MATCH! CHAT NOW",
+          description: "Mutual Kiss! Both +ðŸ’° 10",
+          you: 10,
+          other: 10,
+        });
+        break;
+      case "kiss_slap":
+        setResult({
+          message: "OUCH!",
+          description: "You Kiss, They Slap!",
+          you: 0,
+          other: 15,
+        });
+        break;
+      case "both_slap":
+        setResult({
+          message: "Slashed!",
+          description: "Both Got Partial Points Back",
+          you: 5,
+          other: 5,
+        });
+        break;
+    }
+  };
 
   return (
-    <>
-      <Head>
-        <title>Kiss Or Slap - The Ultimate Game</title>
-        <meta
-          name="description"
-          content="Kiss or Slap is a fun and interactive social game where users can make real money through playful interactions."
+    <div
+      className="flex flex-col items-center justify-between text-white gap-10"
+      style={{
+        marginTop: "8.33vh",
+        marginBottom: "8.33vh",
+        marginLeft: "8.33vw",
+        marginRight: "8.33vw",
+      }}
+    >
+      {/* <div className="fixed inset-0 overflow-hidden pointer-events-none -z-1">
+        <div
+          id="noise-bg"
+          className="absolute w-full h-full bg-repeat mix-blend-overlay opacity-75"
+          style={{
+            backgroundImage: 'url("/noise.svg")',
+            backgroundSize: "1000px 1000px", // Adjust this value as needed
+            backgroundRepeat: "repeat", // Ensure the image repeats correctly
+          }}
         />
-        <meta name="viewport" content="width=device-width, initial-scale=1" />
-      </Head>
+        <div
+          id="kissorslap-bg"
+          className="absolute w-full h-full bg-repeat mix-blend-overlay opacity-75"
+          style={{
+            backgroundImage: 'url("/kissorslap-light.svg")',
+            backgroundSize: "1000px 1000px", // Adjust this value as needed
+            backgroundRepeat: "repeat", // Ensure the image repeats correctly
+          }}
+        />
+      </div> */}
 
-      <section className="flex flex-col items-center justify-center text-center py-16 bg-[#fffcf4] min-h-screen ">
-        <h1 className="text-5xl font-bold text-neutral-800 mb-4">
-          Kiss or Slap: A Social Game of Strategy and Chemistry
+      <div className="text-center w-full">
+        <h1 className="font-press-start text-3xl font-bold mb-4 text-[#f9f9f8] font-normal text-[21px] tracking-[2.52px] leading-[29.5px] whitespace-nowrap">
+          KISS{" "}
+          <span className="bg-blue rounded-lg p-2 tracking-[2.52px] leading-[29.5px] ">
+            OR
+          </span>{" "}
+          SLAP
         </h1>
-        <p className="text-lg text-neutral-600 max-w-2xl mb-8">
+        <p className="text-lg mb-8">
           Discover a fun, interactive game where players earn rewards through
-          playful interactions. Kiss or Slap your way to the top and gain karma
-          points while building your profile!
+          playful interactions. Rewards can be{" "}
+          <span className="text-stroke font-press-start">purchased</span> &{" "}
+          <span className="text-stroke font-press-start">cashe out</span>
+        </p>
+      </div>
+
+      <div className="relative flex flex-col items-center justify-center w-[335px] h-[278px] border-white border-1 bg-purple-300 bg-opacity-20 rounded-3xl py-[50px] px-[28px] text-center gap-4">
+        <p className="text-2xl font-bold mb-2 text-stroke font-press-start text-center h-24 tracking-[2.88px] leading-[48px]">
+          {result.message}
         </p>
+        <p>{result.description}</p>
 
-        {/* Email Signup */}
-        {/* <div className="flex space-x-4 mb-40">
-          <input
-            type="email"
-            placeholder="Your Friends Email"
-            className="px-6 py-3 rounded-md border border-neutral-300 sm:w-96 w-[40vw]"
-          />
-          <button className="bg-yellow-500 text-white px-6 py-3 rounded-md hover:bg-yellow-400 transition-all w-[20vw]">
-            Refer{" "}
-          </button>
-        </div> */}
-      </section>
+        {result.you !== null && (
+          <p className="break-words ">
+            You Got{"   "}
+            <span
+              className={`font-press-start ${
+                result.you < 10 ? "text-stroke-red" : "text-stroke"
+              }`}
+            >
+              {result.you}
+            </span>{"   "}
+            Points
+          </p>
+        )}
+        {result.other !== null && <p>Other Got {result.other} Points</p>}
 
-      {/* Illustration Section */}
-      <section className="bg-[#F0F2F5] py-16">
-        <div className="flex justify-center"></div>
-      </section>
+        {/* <div
+          id="noise-bg"
+          className="absolute w-full h-full bg-repeat mix-blend-overlay opacity-75 -z-1"
+          style={{
+            backgroundImage: 'url("/noise.svg")',
+            backgroundSize: "500px 500px", // Adjust this value as needed
+            backgroundRepeat: "repeat", // Ensure the image repeats correctly
+          }}
+        /> */}
+      </div>
 
-      {/* Centered Call-to-Action Button */}
-      <div className="fixed bottom-8 left-1/2 transform -translate-x-1/2 w-full max-w-lg">
-        <Login></Login>
+      <div className="w-full max-w-md">
+        <div className="grid grid-cols-2 gap-4 mb-4">
+          {["both_kiss", "kiss_slap", "slap_kiss", "both_slap"].map(
+            (action, index) => (
+              <button
+                key={index}
+                onClick={() => handleAction(action)}
+                className={`px-5 py-2 text-center font-bold rounded-lg overflow-hidden ${
+                  selectedButton === action
+                    ? "bg-gradient-to-b from-[#e8def8] to-[#ffef9d] border-[2.88px] border-solid border-[#453c89] text-[#1d1d1b]"
+                    : "bg-purple-300 bg-opacity-20 border-white border-1 text-white"
+                }`}
+                style={{
+                  backgroundImage:
+                    selectedButton !== action ? 'url("/noise.svg")' : undefined,
+                  backgroundSize: "500px 500px",
+                  backgroundRepeat: "repeat",
+                  borderRadius: "8px",
+                }}
+              >
+                <div className="flex items-center justify-between relative">
+                  <div className="items-start flex flex-col w-[55px] relative">
+                    <div className="relative self-stretch h-[21px] mt-[-1.00px] font-body-small font-[number:var(--body-small-font-weight)] text-[#aeaeb2] text-[length:var(--body-small-font-size)] tracking-[var(--body-small-letter-spacing)] leading-[var(--body-small-line-height)] whitespace-nowrap [font-style:var(--body-small-font-style)]">
+                      You
+                    </div>
+                    <div className="ml-[-2.00px] text-[#f9f9f8] relative w-fit font-subtitle w-8 h-[38px] text-[32px]">
+                      {action.startsWith("kiss") ? "ðŸ˜˜" : "ðŸ‘‹"}
+                    </div>
+                  </div>
+                  <div className="items-end flex flex-col w-[55px] relative">
+                    <div className="relative self-stretch h-[21px] mt-[-1.00px] font-body-small font-[number:var(--body-small-font-weight)] text-[#aeaeb2] text-[length:var(--body-small-font-size)] text-right tracking-[var(--body-small-letter-spacing)] leading-[var(--body-small-line-height)] whitespace-nowrap [font-style:var(--body-small-font-style)]">
+                      Other
+                    </div>
+                    <div className="text-black relative w-fit w-8 h-[38px] text-[32px]">
+                      {action.endsWith("slap") ? "ðŸ‘‹" : "ðŸ˜˜"}
+                    </div>
+                  </div>
+                </div>
+              </button>
+            )
+          )}
+        </div>
+        <div className="w-full">
+          <Login></Login>
+        </div>
       </div>
-    </>
+    </div>
   );
-}
+};
+
+export default GameDemoPage;
diff --git a/components/Login/index.tsx b/components/Login/index.tsx
index 06410e8..91cac24 100644
--- a/components/Login/index.tsx
+++ b/components/Login/index.tsx
@@ -5,6 +5,7 @@ import { ref, set } from "firebase/database"; // Firebase Realtime Database func
 import { realtimeDB } from "../../firebaseConfig"; // Firebase Realtime DB instance
 import { useRouter, usePathname } from "next/navigation"; // Use the new next/navigation package for reload and path check
 import { Spinner } from "../../components/Spinner";
+import Button from "../Button";
 // A simple spinner component
 
 export default function LoginComponent() {
@@ -80,35 +81,24 @@ export default function LoginComponent() {
     pathname,
   ]);
 
-  if (!ready) {
-    // Show spinner if Privy is not ready or still saving to Prisma
-    return (
-      <button
-        disabled
-        className="bg-yellow-500 text-white py-4 w-[80%] sm:w-[50%] mx-auto block rounded-full shadow-lg text-center text-lg font-bold hover:bg-yellow-400 transition-all flex justify-center"
-      >
-        <Spinner />
-      </button>
-    );
-  }
 
   return (
     <div>
-      <div className="fixed bottom-8 left-1/2 transform -translate-x-1/2 w-full max-w-lg">
+      <div className="w-full max-w-lg">
         {authenticated ? (
-          <button
+          <Button
             onClick={logout}
-            className="bg-yellow-500 text-white py-4 w-[80%] sm:w-[50%] mx-auto block rounded-full shadow-lg text-center text-lg font-bold hover:bg-yellow-400 transition-all"
-          >
-            Logout
-          </button>
+            loading={!ready}
+            text="Logout"
+            className="bg-yellow-500 text-white py-4 w-[80%] mx-auto block shadow-lg text-center text-lg font-bold hover:bg-yellow-400 transition-all"
+          ></Button>
         ) : (
-          <button
+          <Button
+            loading={!ready}
+            text="Create Account or Login"
             onClick={handleLogin}
-            className="bg-yellow-500 text-white py-4 w-[80%] sm:w-[50%] mx-auto block rounded-full shadow-lg text-center text-lg font-bold hover:bg-yellow-400 transition-all"
-          >
-            Create Account or Login
-          </button>
+            variant="secondary"
+          ></Button>
         )}
       </div>
     </div>
diff --git a/middleware.ts b/middleware.ts
index 88e2023..81ff199 100644
--- a/middleware.ts
+++ b/middleware.ts
@@ -6,19 +6,22 @@ export async function middleware(request: NextRequest) {
     // Extract the requested path
     const { pathname } = request.nextUrl;
 
+    // Allow access to all static assets in the public directory
     if (
+      pathname.startsWith("/_next") || // Next.js static files
+      pathname.startsWith("/public") || // Public directory files
       pathname.endsWith(".png") ||
       pathname.endsWith(".jpeg") ||
       pathname.endsWith(".jpg") ||
+      pathname.endsWith(".svg") ||
       pathname.endsWith(".webp") ||
-      pathname === "/favicon.ico" || // Ignore favicon
-      pathname === "/manifest.json" || // Ignore Next.js static assets
-      pathname.startsWith("/api") || // Ignore Next.js static assets
-      pathname.startsWith("/worker") || // Ignore Next.js static assets
-      pathname.startsWith("/workbox") || // Ignore Next.js static assets
-      pathname.startsWith("/_next") ||
-      pathname.startsWith("/icons") || // Ignore Next.js static assets
-      pathname === "/sw.js" || // Ignore service worker
+      pathname === "/favicon.ico" ||
+      pathname === "/manifest.json" ||
+      pathname.startsWith("/api") ||
+      pathname.startsWith("/worker") ||
+      pathname.startsWith("/workbox") ||
+      pathname.startsWith("/icons") ||
+      pathname === "/sw.js" ||
       pathname === "/sw.map"
     ) {
       return NextResponse.next();
@@ -52,13 +55,14 @@ export async function middleware(request: NextRequest) {
       : null;
 
     if (!privyToken) {
-      // Use the full URL for redirection
+      console.log("Redirecting due to missing privy-token");
       return NextResponse.redirect(new URL("/", request.url));
     }
 
     // Decode the JWT (use your JWT secret here)
     const decoded = jwt.decode(privyToken) as { sub: string };
     if (!decoded || !decoded.sub) {
+      console.log("Redirecting due to invalid token");
       return NextResponse.redirect(new URL("/", request.url));
     }
 
@@ -74,7 +78,8 @@ export async function middleware(request: NextRequest) {
     const user = await res.json();
     console.log("middleWare", user);
     if (!user || !user.isComplete && !pathname.endsWith("svg")) {
-      return NextResponse.redirect(new URL("/onboarding/step0 ", request.url));
+      console.log("Redirecting due to incomplete onboarding");
+      return NextResponse.redirect(new URL("/onboarding/step0", request.url));
     }
 
     // Allow access to the requested page if user is authenticated and complete
diff --git a/tailwind.config.ts b/tailwind.config.ts
index f1e67ab..5cee4d3 100644
--- a/tailwind.config.ts
+++ b/tailwind.config.ts
@@ -35,6 +35,10 @@ module.exports = {
           500: '#EA4180',
           DEFAULT: '#EA4180', // Default pink if no match is found
         },
+        blue: {
+          500: '#280CFF',
+          DEFAULT: '#280CFF', // Default blue if no match is found
+        },
         // Gray Colors
         gray: {
           50: '#FFFFFF', // Pure white
@@ -117,6 +121,27 @@ module.exports = {
             -5px 0px 5px var(--M3-sys-dark-inverse-primary, #6750A4)
           `, // Simulate 5px stroke with text-shadow
         },
+      '.text-stroke-red': {
+        'color': '#FAFAF9',
+        'text-shadow': `
+          -5px -5px 0 var(--M3-sys-dark-inverse-primary, red),
+          5px -5px 0 var(--M3-sys-dark-inverse-primary, red),
+          -5px 5px 0 var(--M3-sys-dark-inverse-primary, red),
+          5px 5px 0 var(--M3-sys-dark-inverse-primary, red),
+          0px 5px 0 var(--M3-sys-dark-inverse-primary, red),
+          0px -5px 0 var(--M3-sys-dark-inverse-primary, red),
+          5px 0px 0 var(--M3-sys-dark-inverse-primary, red),
+          -5px 0px 0 var(--M3-sys-dark-inverse-primary, red),
+          -5px -5px 5px var(--M3-sys-dark-inverse-primary, red),
+          5px -5px 5px var(--M3-sys-dark-inverse-primary, red),
+          -5px 5px 5px var(--M3-sys-dark-inverse-primary, red),
+          5px 5px 5px var(--M3-sys-dark-inverse-primary, red),
+          0px 5px 5px var(--M3-sys-dark-inverse-primary, red),
+          0px -5px 5px var(--M3-sys-dark-inverse-primary, red),
+          5px 0px 5px var(--M3-sys-dark-inverse-primary, red),
+          -5px 0px 5px var(--M3-sys-dark-inverse-primary, red)
+        `,
+      },
         '.font-feature-settings-off': {
           'font-feature-settings': "'liga' off",
         },
